services:
  subscriptions:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
    - app-storage:/rails/storage
    ports:
    - 3000:3000
    restart: unless-stopped
    environment:
      RAILS_FORCE_SSL: "false"
      RAILS_ASSUME_SSL: "false"
      SECRET_KEY_BASE: ${SECRET_KEY_BASE:?}
      DB_HOST: postgres
      POSTGRES_DB: ${POSTGRES_DB:-subscriptions_production}
      POSTGRES_USER: ${POSTGRES_USER:-subscriptions_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?}
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:16
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-subscriptions_user}
      POSTGRES_DB: ${POSTGRES_DB:-subscriptions_production}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  app-storage:
  postgres-data:
